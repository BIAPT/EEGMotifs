%% Load data_motifs

% Parameters
motif = 1;
num_epoch = 12;

data = load('average_data.mat');
data_motifs = data.data_motifs;

alpha_cosim_matrix = zeros(num_epoch,num_epoch);
theta_cosim_matrix = zeros(num_epoch,num_epoch);

alpha_vector = zeros(num_epoch,99);
theta_vector = zeros(num_epoch,99);
for i=1:num_epoch
   epoch_data = data_motifs(i);
   alpha_vector(i,:) = epoch_data.alpha_frequency_avg.node_frequency(motif,:);
   theta_vector(i,:) = epoch_data.theta_frequency_avg.node_frequency(motif,:);
end


for epoch_i = 1:num_epoch
   for epoch_j = 1:num_epoch
       A = alpha_vector(epoch_i,:);
       B = alpha_vector(epoch_j,:);
       alpha_cosim_matrix(epoch_i,epoch_j) = cosine_similarity(A,B);
       
       A = theta_vector(epoch_i,:);
       B = theta_vector(epoch_j,:);
       theta_cosim_matrix(epoch_i,epoch_j) = cosine_similarity(A,B);
   end
end



function plot_cosine(cosim_matrix,title)
        figure;
        colormap('jet')
        imagesc(cosim_matrix);
title(sprintf('PLI of %s at Bandpass: %s',EEG.filename,current_pli));
end

function [similarity] = cosine_similarity(A,B)
     similarity = dot(A,B) / (norm(A) * norm(B));
end